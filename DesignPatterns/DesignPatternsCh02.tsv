In the Lexi case study, the {{c1::Composite}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you want to represent part-whole hierarchies of objects}}"; and the participants were played by: {{c3::Component by Glyph; Leaf by Character and Image; Composite by Row, Column, and Composition}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Strategy}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you need different variants of an algorithm}}"; and the participants were played by: {{c3::Context by Composition; Strategy by Compositor; ConcreteStrategy by ArrayCompositor, TeXCompositor, SimpleCompositor}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Decorator}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you want to add responsibilities to individual objects dynamically and transparently}}"; and the participants were played by: {{c3::Component by Glyph; ConcreteComponent by all other Glyph subclasses; Decorator by MonoGlyph; ConcreteDecorator by Border, Scroller}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Abstract Factory}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::a system should be configured with one of multiple families of products}}"; and the participants were played by: {{c3::AbstractFactory by GuiFactory; ConcreteFactory by MotifFactory, PMFactory, and MacFactory; AbstractProduct by ScrollBar, Button, Menu; ConcreteProduct by MotifScrollBar, MotifButton, MotifMenu, etc}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Bridge}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you want to avoid a permanent binding between an abstraction and its implementation, such as when the implementation must be selected or switched at run-time}}"; and the participants were played by: {{c3::Abstraction by Window; RefinedAbstraction by ApplicationWindow, IconWindow, DialogWindow; Implementor by WindowImp; ConcreteImplementor by MacWindowImp, PMWindowImp, XWindowImp}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Command}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you want to parameterize objects by an action to perform}}"; and the participants were played by: {{c3::Command by Command; ConcreteCommand by PasteCommand, FontCommand, SaveCommand, QuitCommand; Invoker by MenuItem}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Iterator}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::you want to access an aggregate object's contents without exposing its internal representation}}"; and the participants were played by: {{c3::Aggregate by Glyph; ConcreteAggregate by Composition; Iterator by Iterator; ConcreteIterator by PreorderIterator, ArrayIterator, ListIterator, NullIterator}}.	DesignPatterns	2	
In the Lexi case study, the {{c1::Visitor}} pattern best demonstrated this Applicability line from that pattern: "Use when {{c2::many distinct and unrelated operations need to be performed on objects in an object structure, and you want to avoid "polluting" their classes with these operations.}}"; and the participants were played by: {{c3::Visitor by Visitor; ConcreteVisitor by SpellingCheckingVisitor and HyphenationVisitor; ObjectStructure by Composition; Element by Glyph; ConcreteElement by Character, Row, Column, Discretionary}}.	DesignPatterns	2	
