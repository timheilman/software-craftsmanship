Clean Code Comments Smells And Heuristics: {{c1::C1:Inappropriate Information, C2: Obsolete Comment, C3: Redundant Comment}}, {{c2::C4: Poorly Written Comment, C5: Commented-Out Code}}	Clean Code	17	
Clean Code Environment Smells and Heuristics: {{c1::E1: Build Requires More Than One Step, E2: Tests Require More Than One Step}}	Clean Code	17	
Clean Code Functions Smells and Heuristics: {{c1::F1: Too Many Arguments, F2: Output Arguments, F3: Flag Arguments, F4: Dead Function}}	Clean Code	17	
Clean Code General first six Smells and Heuristics: {{c1::G1: Multiple Languages in One Source File, G2: Obvious Behavior is Unimplemented, G3: Incorrect Behavior at the Boundaries}}, {{c2::G4: Overridden Safeties, G5: Duplication, G6: Code at Wrong Level of Abstraction}}	Clean Code	17	
Clean Code General second six Smells and Heuristics: {{c1::G7: Base Classes Depending on Their Derivatives, G8: Too Much Information, G9: Dead Code}}, {{c2::G10: Vertical Separation, G11: Inconsistency, G12: Clutter}}	Clean Code	17	
Clean Code General third six Smells and Heuristics: {{c1::G13: Artificial Coupling, G14: Feature Envy, G15: Selector Arguments}}, {{c2::G16: Obscured Intent, G17: Misplaced Responsibility, G18: Inappropriate Static}}	Clean Code	17	
Clean Code General fourth six Smells and Heuristics: {{c1::G19: Use Explanatory Variables, G20: Function Names Should Say What They Do, G21: Understand the Algorithm}}, {{G22: Make Logical Dependencies Physical, G23: Prefer Polymorphism to If/Else or Switch/Case, G24: Follow Standard Conventions}}	Clean Code	17	
Clean Code General fifth six Smells and Heuristics: {{c1::G25: Replace Magic Numbers with Named Constants, G26: Be Precise, G27: Structure over Convention}}, {{c2::G28: Encapsulate Conditionals, G29: Avoid Negative Conditionals, G30: Functions Should Do One Thing}}	Clean Code	17	
Clean Code General sixth six Smells and Heuristics: {{c1::G31: Hidden Temporal Couplings, G32: Don't Be Arbitrary, G33: Encapsulate Boundary Conditions}}, {{c2::G34: Functions Should Descend Only One Level of Abstraction, G35: Keep Configurable Data and High Levels, G36: Avoid Transitive Navigation}}	Clean Code	17	
Clean Code Java Smells and Heuristics: {{c1::J1: Avoid Long Import Lists by Using Wildcards, J2: Don't Inherit Constants, J3: Constants vs Enums}}	Clean Code	17	
Clean Code Names Smells and Heuristics: {{c1::N1: Choose Descriptive Names, N2: Choose Names at the Appropriate Level of Abstraction, N3: Use Standard Nomenclature Where Possible}}, {{c2::N4: Unambiguous Names, N5: Use Long Names for Long Scopes, N6: Avoid Encodings, N7: Names Should Describe Side-Effects}}	Clean Code	17	
Clean Code Tests Smells and Heuristics: {{c1::T1: Insufficient Tests, T2: Use a Coverate Tool!, T3: Don't Skip Trivial Tests}}, {{c2::T4: An Ignore Test Is a Question about an Ambiguity, T5: Test Boundary Conditions, T6: Exhaustively Test Near Bugs}}, {{c3::T7: Patterns of Failure are Revealing, T8: Test Coverage Patterns Can be Revealing, T9: Tests Should Be Fast}}	Clean Code	17	
Clean Code Smell and Heuristic Categories (and counts): {{c1::Comments (5), Environment (2), Functions (4)}}, {{c2::General (36), Java (3), Names (7), and Tests (9)}}	Clean Code	17	
Clean Code: Smell or Heuristic: {{c2::C1}}: {{c1::Inappropriate Information}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::C2}}: {{c1::Obsolete Comment}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::C3}}: {{c1::Redundant Comment}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::C4}}: {{c1::Poorly Written Comment}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::C5}}: {{c1::Commented-Out Code}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::E1}}: {{c1::Build Requires More Than One Step}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::E2}}: {{c1::Tests Require More Than One Step}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::F1}}: {{c1::Too Many Arguments}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::F2}}: {{c1::Output Arguments}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::F3}}: {{c1::Flag Arguments}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::F4}}: {{c1::Dead Function}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G1}}: {{c1::Multiple Languages in One Source File}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G2}}: {{c1::Obvious Behavior Is Unimplemented}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G3}}: {{c1::Incorrect Behavior at the Boundaries}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G4}}: {{c1::Overridden Safeties}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G5}}: {{c1::Duplication}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G6}}: {{c1::Code at Wrong Level of Abstraction}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G7}}: {{c1::Base Classes Depending on Their Derivatives}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G8}}: {{c1::Too Much Information}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G9}}: {{c1::Dead Code}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G10}}: {{c1::Vertical Separation}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G11}}: {{c1::Inconsistency}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G12}}: {{c1::Clutter}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G13}}: {{c1::Artificial Coupling}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G14}}: {{c1::Feature Envy}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G15}}: {{c1::Selector Arguments}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G16}}: {{c1::Obscured Intent}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G17}}: {{c1::Misplaced Responsibility}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G18}}: {{c1::Inappropriate Static}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G19}}: {{c1::Use Explanatory Variables}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G20}}: {{c1::Function Names Should Say What They Do}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G21}}: {{c1::Understand the Algorithm}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G22}}: {{c1::Make Logical Dependencies Physical}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G23}}: {{c1::Prefer Polymorphism to If/Else or Switch/Case}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G24}}: {{c1::Follow Standard Conventions}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G25}}: {{c1::Replace Magic Numbers with Named Constants}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G26}}: {{c1::Be Precise}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G27}}: {{c1::Structure over Convention}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G28}}: {{c1::Encapsulate Conditionals}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G29}}: {{c1::Avoid Negative Conditionals}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G30}}: {{c1::Functions Should Do One Thing}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G31}}: {{c1::Hidden Temporal Couplings}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G32}}: {{c1::Don't Be Arbitrary}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G33}}: {{c1::Encapsulate Boundary Conditions}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G34}}: {{c1::Functions Should Descend Only One Level of Abstraction}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G35}}: {{c1::Keep Configurable Data at High Levels}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::G36}}: {{c1::Avoid Transitive Navigation}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::J1}}: {{c1::Avoid Long Import Lists by Using Wildcards}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::J2}}: {{c1::Don't Inherit Constants}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::J3}}: {{c1::Constants versus Enums}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N1}}: {{c1::Choose Descriptive Names}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N2}}: {{c1::Choose Names at the Appropriate Level of Abstraction}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N3}}: {{c1::Use Standard Nomenclature Where Possible}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N4}}: {{c1::Unambiguous Names}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N5}}: {{c1::Use Long Names for Long Scopes}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N6}}: {{c1::Avoid Encodings}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::N7}}: {{c1::Names Should Describe Side-Effects}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T1}}: {{c1::Insufficient Tests}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T2}}: {{c1::Use a Coverage Tool!}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T3}}: {{c1::Don't Skip Trivial Tests}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T4}}: {{c1::An Ignored Test Is a Question about an Ambiguity}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T5}}: {{c1::Test Boundary Conditions}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T6}}: {{c1::Exhaustively Test Near Bugs}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T7}}: {{c1::Patterns of Failure Are Revealing}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T8}}: {{c1::Test Coverage Patterns Can Be Revealing}}	CleanCode	17	
Clean Code: Smell or Heuristic: {{c2::T9}}: {{c1::Tests Should Be Fast}}	CleanCode	17	
